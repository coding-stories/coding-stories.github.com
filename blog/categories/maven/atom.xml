<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: maven | Coding Stories]]></title>
  <link href="http://coding-stories.github.com/blog/categories/maven/atom.xml" rel="self"/>
  <link href="http://coding-stories.github.com/"/>
  <updated>2015-08-24T12:27:25+02:00</updated>
  <id>http://coding-stories.github.com/</id>
  <author>
    <name><![CDATA[Jean-Christophe Sirot]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Continuous Delivery with Jenkins workflow and Docker]]></title>
    <link href="http://coding-stories.github.com/blog/2015/08/23/continuous-delivery-with-jenkins-workflow-and-docker/"/>
    <updated>2015-08-23T18:49:00+02:00</updated>
    <id>http://coding-stories.github.com/blog/2015/08/23/continuous-delivery-with-jenkins-workflow-and-docker</id>
    <content type="html"><![CDATA[<p>Recently Cloudbees releases the <a href="https://wiki.jenkins-ci.org/display/JENKINS/CloudBees+Docker+Workflow+Plugin">CloudBees Docker Workflow Plugin</a> to make the integration of Docker with Jenkins workflows as easy as possible. Now, deploying a continuous delivery pipeline is (almost) straightforward. Here is a simple but comprehensive example.</p>

<!-- more -->


<p><strong>Disclaimer</strong>: I'm using a maven project for this example because maven a tool I'm comfortable with. This post could be adapted to python, rails or whatever-you-want project with minor efforts.</p>

<p>First of all, we need to install the required plugins in Jenkins:</p>

<ul>
<li>Workflow: Aggregator</li>
<li>CloudBees Docker Workflow</li>
</ul>


<p>This sample workflow is simple and composed of 4 steps:</p>

<ol>
<li>Build and unit tests</li>
<li>Build Docker image</li>
<li>Acceptance Tests</li>
<li>Push Docker image</li>
</ol>


<h1>Build and unit tests</h1>

<p>In a new Workflow job enter this script:</p>

<p>```groovy
node {</p>

<pre><code>/* Configure the JDK to use. 'JDK8' is the symbolic name under which the JDK
 * is defined in the global Jenkins configuration. */
env.JAVA_HOME="${tool 'JDK8'}"

stage 'Build'
/* Clone the project from github */
git url: 'https://github.com/jcsirot/atmosphere-calculator.git', branch: '0.1.0'
/* Select the maven configuration. 'M3' is the symbolic name used the
 * global Jenkins configuration. */
def mvnHome = tool "M3"
/* Run maven: build and run the unit tests  */
sh "${mvnHome}/bin/mvn clean package"
/* This is the syntax for using a generic step. Here the test results are archived. */
step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml'])
</code></pre>

<p>}
```</p>

<p>This short script runs maven to build the jars and to execute the unit tests. Now we are ready to build the Docker image.</p>

<h1>Build Docker image</h1>

<p>The CloudBees Docker Workflow Plugin provides a global variable <code>docker</code> which offers access to the common Docker functions in workflow scripts. For a comprehensive description of the plugin and the available commands, look at the <a href="http://documentation.cloudbees.com/docs/cje-user-guide/docker-workflow.html">plugin guide</a>.</p>

<p>To build the image we call <code>build</code> on the <code>docker</code> variable. Two parameters are passed: the image name (with the Docker notation <code>[registry/]image[:tag]</code>) and the directory where is located the <code>Dockerfile</code>.</p>

<p>```groovy
node {</p>

<pre><code>/* ... */
stage 'Build Docker image'
def image = docker.build('jcsirot/atmo-calc:snapshot', '.')
</code></pre>

<p>}
```</p>

<p>The call returns a handle on the built image so we can work with it.</p>

<h1>Acceptance Tests</h1>

<p>In order to execute the acceptance tests we wants to run a container from our newly built image. The <code>withRun</code> method can be invoked on the image handle. It is possible to pass the <code>docker run</code> parameters like port mapping or volumes configuration.</p>

<p><code>withRun</code> also takes a code block. The container is started at the begining of the block, then the code in the block is executed and the container is stopped at the end of the block. Note that the block is executed on the Jenkins node, <strong>not inside the container</strong>. Use the <code>inside</code> method on the image handle to execute code inside the container.</p>

<p>```groovy
node {</p>

<pre><code>/* ... */
stage 'Acceptance Tests'
image.withRun('-p 8181:8181') {c -&gt;
    sh "${mvnHome}/bin/mvn verify"
}
/* Archive acceptance tests results */
step([$class: 'JUnitResultArchiver', testResults: '**/target/failsafe-reports/TEST-*.xml'])
</code></pre>

<p>}
```</p>

<h1>Push Docker image</h1>

<p>The last step consists in pushing the image to a Docker registry. It can be done with the method <code>push</code>.</p>

<p>In order to configure the registry credentials, go the Jenkins Manager Credentials page. Add a new username/password entry and enter your registry login and password. Click on <strong>Advanced</strong> to show the ID field and enter a unique identifier.</p>

<p><img class="center" src="/images/posts/jenkins-docker-credentials-20150823.png" title="'Docker Hub Credentials'" ></p>

<p>The <code>withRegistry</code> method is also used to pass the registry URL and credentials ID configure above.</p>

<p>```groovy
node {</p>

<pre><code>/* ... */
stage 'Push image'
docker.withRegistry("https://registry.hub.docker.com", "docker-registry") {
    image.push()
}
</code></pre>

<p>}
```</p>

<p>The image is pushed and, unless you pushed it to a custom registry, should be available on the <a href="https://hub.docker.com/">Docker hub</a>.</p>

<h1>What's next?</h1>

<p>This example is simple and far from being perfect. Feel free to share suggestions or questions in the comments.</p>

<ul>
<li>The project I used for this sample: <a href="https://github.com/jcsirot/atmosphere-calculator">https://github.com/jcsirot/atmosphere-calculator</a></li>
<li>The workflow script: <a href="https://gist.github.com/jcsirot/4de001d280998f27aa82">https://gist.github.com/jcsirot/4de001d280998f27aa82</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Couverture des tests d’intégration avec JaCoCo, Maven et Sonar]]></title>
    <link href="http://coding-stories.github.com/blog/2012/01/23/couverture-des-tests-dintegration-avec-jacoco-maven-et-sonar/"/>
    <updated>2012-01-23T07:16:00+01:00</updated>
    <id>http://coding-stories.github.com/blog/2012/01/23/couverture-des-tests-dintegration-avec-jacoco-maven-et-sonar</id>
    <content type="html"><![CDATA[<p>Sur certains de mes projets maven j’aimerai pouvoir séparer les tests unitaires des tests d’intégration. Les tests d’intégration sont souvent moins stables, pas toujours reproductibles et ils prennent souvent trop de temps pour être exécutés par les développeurs à chaque compilation.</p>

<!-- more -->


<h1>Déplacer les tests dans un module dédié</h1>

<p>Première chose à faire, créer un module dédié dans le projet maven pour y mettre uniquement les tests d’intégration. Voilà la structure globale du projet :</p>

<p>Error processing input, expected syntax: {% img [class name(s)] [http[s]:/]/path/to/image [width [height]] [title text | "title text" ["alt text"]] %}</p>

<p>Ensuite pour empêcher que le module <code>libfoo-it</code> ne se lance à chaque compilation on crée un profil maven dédié aux test d’intégration dans le fichier <code>pom.xml</code> principal.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;profiles&gt;</span>
</span><span class='line'>  <span class="nt">&lt;profile&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>id<span class="ni">&amp;gt;</span>run-its<span class="ni">&amp;lt;</span>/id<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>modules<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>module<span class="ni">&amp;gt;</span>libfoo-it<span class="ni">&amp;lt;</span>/module<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/modules<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/profile&gt;</span>
</span><span class='line'><span class="nt">&lt;/profiles&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h1>Utiliser maven-failsafe-plugin</h1>

<p>Le <a href="http://maven.apache.org/plugins/maven-failsafe-plugin/">plugin failsafe</a> permet de lancer les test d’intégration lors d’un build maven tout comme le plugin surefire le fait avec les tests unitaires. Le plugin failsafe s’attache aux phases <em>integration-test</em> et <em>verify</em> du <a href="http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html">cycle de vie du build</a>.</p>

<p>Comme il n’est pas possible de configurer plusieurs répertoires contenant les tests dans maven, la discrimination entre tests unitaires et d’intégration se fait sur le nom des classes. Il ne faudra donc pas oublier de nommer correctement ses classes de test.</p>

<p>Les <em>templates</em> par défaut sont les suivants :</p>

<ul>
<li><strong>tests unitaires</strong> : <strong>/*Test.java, </strong>/Test<em>.java, **/</em>TestCase.java</li>
<li><strong>tests d’intégration</strong> : <strong>/*IT.java, </strong>/IT<em>.java, **/</em>ITCase.java</li>
</ul>


<p>On ajoute ensuite la configuration du plugin failsafe dans notre profil.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;profiles&gt;</span>
</span><span class='line'>  <span class="nt">&lt;profile&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>id<span class="ni">&amp;gt;</span>run-its<span class="ni">&amp;lt;</span>/id<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>modules<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>module<span class="ni">&amp;gt;</span>libfoo-it<span class="ni">&amp;lt;</span>/module<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/modules<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>build<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>pluginManagement<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-failsafe-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>2.11<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>executions<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>execution<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>goals<span class="ni">&amp;gt;</span>
</span><span class='line'>              <span class="ni">&amp;lt;</span>goal<span class="ni">&amp;gt;</span>integration-test<span class="ni">&amp;lt;</span>/goal<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>/goals<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>/execution<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/executions<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/pluginManagement<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/build<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/profile&gt;</span>
</span><span class='line'><span class="nt">&lt;/profiles&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Le POM du sous-projet libfoo-it est également à mettre à jour. De cette façon, petite optimisation, le plugin failsafe ne sera lancé que dans le module qui contient les tests d’intégration.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[/~]$ mvn -Prun-its clean verify</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h1>Couverture de code avec JaCoCo</h1>

<p>Avoir des tests c’est bien, calculer la couverture de ces tests c’est mieux. Pour cela nous allons utiliser le moteur de couverture de code <a href="http://www.eclemma.org/jacoco/">JaCoCo</a> (Java Code Coverage), plus adapté aux tests d’intégration que le bien connu Cobertura.</p>

<p>JaCoCo est fournit sous la forme d’un agent à lancer avec la JVM. Heureusement, il existe un plugin maven pour JaCoCo qui va nous aider à l’intégrer dans le build. Le plugin maven JaCoCo dispose d’un goal <em>prepare-agent</em> qui va dans un premier temps télécharger l’agent et dans un second temps créer une variable maven contenant la configuration de l’agent qu’il suffira de passer en paramètre au plugin failsafe.</p>

<p>Voilà ce que donne la configuration du plugin (<strong>Nota</strong>: j’utilise la version 5.3 du plugin JaCoCo car les versions suivantes ne semblent pas fonctionner avec maven 2.2.1) :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;profiles&gt;</span>
</span><span class='line'>  <span class="nt">&lt;profile&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>id<span class="ni">&amp;gt;</span>run-its<span class="ni">&amp;lt;</span>/id<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>modules<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>module<span class="ni">&amp;gt;</span>libfoo-it<span class="ni">&amp;lt;</span>/module<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/modules<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>build<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>pluginManagement<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.jacoco<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-jacoco-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>0.5.3.201107060350<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>executions<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>execution<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>phase<span class="ni">&amp;gt;</span>pre-integration-test<span class="ni">&amp;lt;</span>/phase<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>goals<span class="ni">&amp;gt;</span>
</span><span class='line'>              <span class="ni">&amp;lt;</span>goal<span class="ni">&amp;gt;</span>prepare-agent<span class="ni">&amp;lt;</span>/goal<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>/goals<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>/execution<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/executions<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>propertyName<span class="ni">&amp;gt;</span>it.failsafe.argLine<span class="ni">&amp;lt;</span>/propertyName<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>destFile<span class="ni">&amp;gt;</span>${it.jacoco.destFile}<span class="ni">&amp;lt;</span>/destFile<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-failsafe-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>2.11<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>executions<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>execution<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>goals<span class="ni">&amp;gt;</span>
</span><span class='line'>              <span class="ni">&amp;lt;</span>goal<span class="ni">&amp;gt;</span>integration-test<span class="ni">&amp;lt;</span>/goal<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>/goals<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>/execution<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/executions<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>argLine<span class="ni">&amp;gt;</span>${it.failsafe.argLine}<span class="ni">&amp;lt;</span>/argLine<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/pluginManagement<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/build<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>properties<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>it.jacoco.destFile<span class="ni">&amp;gt;</span>${java.io.tmpdir}/jacoco-foo.dump<span class="ni">&amp;lt;</span>/it.jacoco.destFile<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/properties<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/profile&gt;</span>
</span><span class='line'><span class="nt">&lt;/profiles&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Le plugin JaCoCo va générer la configuration de l’agent pour lancer les tests et la placer dans variable <code>it.failsafe.argLine</code>. Ensuite on configure le paramètre <code>argLine du plugin failsafe avec cette variable. On définit également le fichier qui va collecter les données de couverture (avec paramètre</code>destFile).</p>

<p>Il faut également mettre à jour le POM du module contenant les tests :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;build&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugins&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.jacoco<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-jacoco-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-failsafe-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'><span class="nt">&lt;/build&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h1>Couverture avec Sonar</h1>

<p>Maintenant que nous avons nos données de couverture dans un fichier, il serait intéressant de les faire digérés à Sonar lors de son analyse. Depuis la version 2.12, <a href="http://www.sonarsource.org/">Sonar</a> est livré avec le plugin JaCoCo ; pour les précédentes il faudra l’installer depuis l’<em>update center</em>.</p>

<p>Le plugin JaCoCo de Sonar attend à trouver le chemin vers le fichier de collecte des données dans la variable `sonar.jacoco.itReportPath. Il est possible de configurer ce chemin dans l’interface web de Sonar (menu <em>settings</em>, catégorie <em>JaCoCo</em>, paramètre <em>File with execution data for integration tests</em>) mais cette variable peut également être configurée dans le POM.</p>

<p>Voilà donc la version définitive du profil :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;profiles&gt;</span>
</span><span class='line'>  <span class="nt">&lt;profile&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>id<span class="ni">&amp;gt;</span>run-its<span class="ni">&amp;lt;</span>/id<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>modules<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>module<span class="ni">&amp;gt;</span>libfoo-it<span class="ni">&amp;lt;</span>/module<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/modules<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>build<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>pluginManagement<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.jacoco<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-jacoco-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>0.5.3.201107060350<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>executions<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>execution<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>phase<span class="ni">&amp;gt;</span>pre-integration-test<span class="ni">&amp;lt;</span>/phase<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>goals<span class="ni">&amp;gt;</span>
</span><span class='line'>              <span class="ni">&amp;lt;</span>goal<span class="ni">&amp;gt;</span>prepare-agent<span class="ni">&amp;lt;</span>/goal<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>/goals<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>/execution<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/executions<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>propertyName<span class="ni">&amp;gt;</span>it.failsafe.argLine<span class="ni">&amp;lt;</span>/propertyName<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>destFile<span class="ni">&amp;gt;</span>${it.jacoco.destFile}<span class="ni">&amp;lt;</span>/destFile<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-failsafe-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>2.11<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>executions<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>execution<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>goals<span class="ni">&amp;gt;</span>
</span><span class='line'>              <span class="ni">&amp;lt;</span>goal<span class="ni">&amp;gt;</span>integration-test<span class="ni">&amp;lt;</span>/goal<span class="ni">&amp;gt;</span>
</span><span class='line'>            <span class="ni">&amp;lt;</span>/goals<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>/execution<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/executions<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>argLine<span class="ni">&amp;gt;</span>${it.failsafe.argLine}<span class="ni">&amp;lt;</span>/argLine<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/pluginManagement<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/build<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>properties<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>it.jacoco.destFile<span class="ni">&amp;gt;</span>${java.io.tmpdir}/jacoco-foo.dump<span class="ni">&amp;lt;</span>/it.jacoco.destFile<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>sonar.jacoco.itReportPath<span class="ni">&amp;gt;</span>${it.jacoco.destFile}<span class="ni">&amp;lt;</span>/sonar.jacoco.itReportPath<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/properties<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/profile&gt;</span>
</span><span class='line'><span class="nt">&lt;/profiles&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Il ne reste plus qu’à lancer l’analyse avec Sonar :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[/~]$ mvn -Prun-its clean verify sonar:sonar</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Finalement, après avoir ajouté le widget Integration test coverage dans le dashboard, on obtient ce résultat :</p>

<p><img class="center" src="/images/posts/sonar-coverage-it-20120123.png" title="'Code coverage avec Sonar'" ></p>

<h1>Pistes d’améliorations</h1>

<p>Cette solution est un peu brute de décoffrage et pour dire vrai entre le début de l’écriture de ce post et maintenant j’ai eu quelques idées pour l’améliorer :</p>

<ul>
<li>Passer la configuration du profil dans un super POM dont héritent tous les projets. En effet, mis à part le paramètre `destFile il n’y a rien de spécifique dans cette configuration. On pourrait même imaginer la génération d’un nom de fichier aléatoire à chaque lancement.</li>
<li>Utiliser plusieurs modules de tests d’intégration. Pour cela il faut mettre le paramètre supplémentaire <code>append</code> à <em>true</em> dans le plugin maven JaCoCo afin que les données d’exécution de tous les modules soient collectées dans le même fichier.</li>
</ul>


<p>Et si vous avez d’autres idées, n’hésitez pas à les poster dans les commentaires.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Signer les JARs avec maven]]></title>
    <link href="http://coding-stories.github.com/blog/2010/09/02/signer-les-jars-avec-maven/"/>
    <updated>2010-09-02T23:09:00+02:00</updated>
    <id>http://coding-stories.github.com/blog/2010/09/02/signer-les-jars-avec-maven</id>
    <content type="html"><![CDATA[<p>Après avoir vu cette <a href="http://stackoverflow.com/questions/3598424/jar-signing-strategy-in-maven-projects">question</a> sur stackoverflow j’ai pensé que présenter la façon dont je gère la signature de code avec maven pouvait en intéresser certains.</p>

<!-- more -->


<h1>Utiliser deux <em>keystores</em></h1>

<p>Tout d’abord il s’agit de produire un keystore pour le développement ; soit un certificat auto-signée, soit un certificat émis par une PKI interne à votre organisation si d’aventure vous en disposez une. Appelons le `dev.keystore. Ce keystore va être enregistré dans le SCM et de cette façon le serveur d’intégration continue pourra signer les builds de développement.</p>

<p>Le deuxième keystore contiendra la clé de production, c’est-à-dire un certificat signé par une autorité de certification délivrant des certificats de signature de code. Comptez entre 100 et 300€/an. Appelons le `prod.keystore. Idéalement ce keystore sera conservé en sécurité et protégé par un mot de passe sûr, connu uniquement des personnes autorisées (par exemple le responsable des releases).</p>

<p>Pour les détails de la génération de la clé et l’obtention d’un certificat je vous laisse regarder la <a href="http://download.oracle.com/javase/6/docs/technotes/tools/solaris/keytool.html">documentation de keytool</a>.</p>

<h1>Configurer maven</h1>

<p>Le plugin maven-jarsigner-plugin comme son nom l’indique permet de signer des jar. Comme il est lié par défaut à la phase <em>package</em> de maven il sera appelé automatiquement une fois le jar généré. Configurons-le.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;build&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-jarsigner-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.2<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>executions<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>execution<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>goals<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>goal<span class="ni">&amp;gt;</span>sign<span class="ni">&amp;lt;</span>/goal<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/goals<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/execution<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/executions<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>keystore<span class="ni">&amp;gt;</span>${keystore.path}<span class="ni">&amp;lt;</span>/keystore<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>storetype<span class="ni">&amp;gt;</span>${keystore.type}<span class="ni">&amp;lt;</span>/storetype<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>alias<span class="ni">&amp;gt;</span>${keystore.alias}<span class="ni">&amp;lt;</span>/alias<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>storepass<span class="ni">&amp;gt;</span>${keystore.store.password}<span class="ni">&amp;lt;</span>/storepass<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>keypass<span class="ni">&amp;gt;</span>${keystore.key.password}<span class="ni">&amp;lt;</span>/keypass<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;build&gt;</span>
</span><span class='line'>  ...
</span><span class='line'>  <span class="nt">&lt;properties&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>keystore.path<span class="ni">&amp;gt;</span>dev.keystore<span class="ni">&amp;lt;</span>/keystore.path<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>keystore.type<span class="ni">&amp;gt;</span>JKS<span class="ni">&amp;lt;</span>/keystore.type<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>keystore.alias<span class="ni">&amp;gt;</span>signingKey<span class="ni">&amp;lt;</span>/keystore.alias<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>keystore.password<span class="ni">&amp;gt;</span>changeit<span class="ni">&amp;lt;</span>/keystore.password<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>keystore.store.password<span class="ni">&amp;gt;</span>${keystore.password}<span class="ni">&amp;lt;</span>/keystore.store.password<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>keystore.key.password<span class="ni">&amp;gt;</span>${keystore.password}<span class="ni">&amp;lt;</span>/keystore.key.password<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/properties&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Ensuite dans le fichier <code>${HOME}/.m2/settings.xml</code> on définit un profil codesigning :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;settings&gt;</span>
</span><span class='line'>  <span class="nt">&lt;profiles&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>profile<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>id<span class="ni">&amp;gt;</span>codesigning<span class="ni">&amp;lt;</span>/id<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>properties<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>keystore.path<span class="ni">&amp;gt;</span>~/private/prod.keystore<span class="ni">&amp;lt;</span>/keystore.path<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>keystore.alias<span class="ni">&amp;gt;</span>codesigning<span class="ni">&amp;lt;</span>/keystore.alias<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>keystore.type<span class="ni">&amp;gt;</span>JKS<span class="ni">&amp;lt;</span>/keystore.type<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>keystore.store.password<span class="ni">&amp;gt;</span>${keystore.password}<span class="ni">&amp;lt;</span>/keystore.store.password<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>keystore.key.password<span class="ni">&amp;gt;</span>${keystore.password}<span class="ni">&amp;lt;</span>/keystore.key.password<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>keystore.password<span class="ni">&amp;gt;</span>aVeryStringPassword<span class="ni">&amp;lt;</span>/keystore.password<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/properties<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/profile<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/profiles&gt;</span>
</span><span class='line'><span class="nt">&lt;/settings&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Désormais pour signer avec la clé de production il suffit de lancer maven avec le bon profil.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn clean install -Pcodesigning</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Si vous être parano, il est possible de ne pas mettre le mot de passe dans le fichier <code>settings.xml</code>. Dans ce cas on le passe à maven en paramètre.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn clean install -Pcodesigning -Dkeystore.password=aVeryStringPassword</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h1>Faire une release</h1>

<p>La version stable du produit se doit d’être signée par la clé de production. Pour cela on passe le profil au plugin release :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn release:perform -Darguments="-Pcodesigning -Dkeystore.password=aVeryStringPassword"</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Et comme je trouve cette syntaxe peu agréable à utiliser, j’ai configuré le plugin dans le <code>pom.xml</code>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>maven-release-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>2.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;configuration&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>arguments<span class="ni">&amp;gt;</span>-Pcodesigning -Dkeystore.password=${keystore.password}<span class="ni">&amp;lt;</span>/arguments<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>goals<span class="ni">&amp;gt;</span>deploy<span class="ni">&amp;lt;</span>/goals<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>useReleaseProfile<span class="ni">&amp;gt;</span>false<span class="ni">&amp;lt;</span>/useReleaseProfile<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>de cette façon on peut se contenter d’appeler cette commande :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn release:perform -Dkeystore.password=aVeryStringPassword</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vérifier le JIRA avant de faire la release]]></title>
    <link href="http://coding-stories.github.com/blog/2010/05/31/verifier-le-jira-avant-de-faire-la-release/"/>
    <updated>2010-05-31T15:30:00+02:00</updated>
    <id>http://coding-stories.github.com/blog/2010/05/31/verifier-le-jira-avant-de-faire-la-release</id>
    <content type="html"><![CDATA[<p>Quand je coiffe ma casquette de <em>release manager</em> je dois m’assurer que le logiciel que je prépare à affubler d’un joli numéro de version est prêt. Le code n’est pas tout ; il existe une multitude de petits détails à vérifier pour satisfaire les critères de qualité demandés : les tests (unitaires, d’intégration) passent ils ? Le <em>coding style</em> a-t-il été bien respecté ? Les dépendences sont-elles à jour ? Je me suis donc fait une <em>release checklist</em> qui détaille point par point toutes ces tâches.</p>

<h1>Automatisez !</h1>

<p>En bon informaticien pragmatique je connais le bug de l’interface chaise-clavier : tout ce qui est fait à la main est une intarissable source de problèmes et il m’arrive parfois de faire une bêtise, ce qui a le don de me mettre de fort mauvaise humeur.</p>

<p>Comme je suis -fainéant- consciencieux, je cherche donc à automatiser le maximum de tâches. Dans ma checklist se trouve le point suivant : S’assurer que tous les tickets dans le JIRA sont fermés. Mon objectif : annuler le lancement de la release quand cette condition n’est pas remplie.</p>

<h1>JIRA par RPC</h1>

<p>Dans une premier temps il faut accéder à JIRA pour récupérer la liste des issues qui nous intéressent. Pour cela JIRA met à disposition deux interfaces RPC : XML-RPC et SOAP. On utilisera SOAP, non pas par plaisir car je trouve XML-RPC beaucoup plus simple, mais parce que l’API disponible par XML-RPC est moins riche et surtout ne fournit pas la méthode dont on a besoin.</p>

<p>Le descripteur WSDL est normalement servit par JIRA. En supposant que JIRA est installé à l’URL « `http://jira.chelonix.com/ » alors le WSDL peut être téléchargé à l’URL suivante :</p>

<p><code>http://jira.chelonix.com/rpc/soap/jirasoapservice-v2?wsdl</code></p>

<p>Pour utiliser l’API SOAP de JIRA il va falloir enrichir son pom.xml de quelques dépendances à la bibliothèque <a href="http://ws.apache.org/axis/">Axis</a> de la fondation Apache.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>!-- Axis dependencies --<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>axis<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>axis<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.3<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>axis<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>axis-jaxrpc<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.3<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>axis<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>axis-saaj<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.3<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>axis<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>axis-wsdl4j<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.5.1<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Toujours dans le <code>pom.xml</code> on ajoute un appel au plugin axistools-maven-plugin. Lors de la phase <em>generate-sources</em>, le fichier WSDL va être utilisé pour auto-générer les classes du client SOAP.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;build&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.codehaus.mojo<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>axistools-maven-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.3<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>dependencies<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>axis<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>axis<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.3<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/dependencies<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>wsdlFiles<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>wsdlFile<span class="ni">&amp;gt;</span>jirasoapservice-v2.wsdl<span class="ni">&amp;lt;</span>/wsdlFile<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/wsdlFiles<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>packageSpace<span class="ni">&amp;gt;</span>com.atlassian.jira.rpc.soap.client<span class="ni">&amp;lt;</span>/packageSpace<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>executions<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>execution<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>id<span class="ni">&amp;gt;</span>wsdl2java-generation<span class="ni">&amp;lt;</span>/id<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>phase<span class="ni">&amp;gt;</span>generate-sources<span class="ni">&amp;lt;</span>/phase<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>goals<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>goal<span class="ni">&amp;gt;</span>wsdl2java<span class="ni">&amp;lt;</span>/goal<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/goals<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/execution<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/executions<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/plugins<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/build&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Le plugin s’attend à trouver le WSDL dans le répertoire <code>${basedir}/src/main/wsdl</code>. Pense à l’y mettre ou à modifier la propriété <code>sourceDirectory</code> dans la configuration du plugin.
Une fois que le projet a été configuré, il ne reste plus qu’à coder :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">chelonix</span><span class="o">.</span><span class="na">jira</span><span class="o">.</span><span class="na">rpc</span><span class="o">.</span><span class="na">soap</span><span class="o">.</span><span class="na">client</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">com.atlassian.jira.rpc.exception.RemoteException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.atlassian.jira.rpc.soap.client.JiraSoapService</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.atlassian.jira.rpc.soap.client.JiraSoapServiceService</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.atlassian.jira.rpc.soap.client.JiraSoapServiceServiceLocator</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.atlassian.jira.rpc.soap.client.RemoteIssue</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.net.URL</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">A</span> <span class="n">JIRA</span> <span class="n">SOAP</span> <span class="n">client</span> <span class="n">checking</span> <span class="k">for</span> <span class="n">opened</span> <span class="n">issues</span> <span class="k">for</span> <span class="n">a</span> <span class="n">project</span><span class="o">/</span><span class="n">version</span> <span class="n">couple</span><span class="o">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">IssueChecker</span>
</span><span class='line'><span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">URL</span> <span class="o">=</span> <span class="s">&quot;http://jira.chelonix.com/rpc/soap/jirasoapservice-v2&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">IssueCherker</span> <span class="n">checker</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IssueChecker</span><span class="o">();</span>
</span><span class='line'>        <span class="n">RemoteIssue</span><span class="o">[]</span> <span class="n">issues</span> <span class="o">=</span> <span class="n">checker</span><span class="o">.</span><span class="na">check</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="n">args</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
</span><span class='line'>        <span class="k">for</span> <span class="o">(</span><span class="n">RemoteIssue</span> <span class="nl">issue:</span> <span class="n">issues</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">printf</span><span class="o">(</span><span class="s">&quot;Opened issue: %s&quot;</span><span class="o">,</span> <span class="n">issue</span><span class="o">.</span><span class="na">getKey</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">private</span> <span class="n">JiraSoapService</span> <span class="n">jiraSoapService</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="nf">IssueChecker</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="n">JiraSoapServiceService</span> <span class="n">jiraSoapServiceLocator</span> <span class="o">=</span>
</span><span class='line'>        <span class="k">new</span> <span class="nf">JiraSoapServiceServiceLocator</span><span class="o">();</span>
</span><span class='line'>    <span class="n">jiraSoapService</span> <span class="o">=</span> <span class="n">jiraSoapServiceLocator</span><span class="o">.</span><span class="na">getJirasoapserviceV2</span><span class="o">(</span><span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">URL</span><span class="o">));</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">RemoteIssue</span><span class="o">[]</span> <span class="nf">check</span><span class="o">(</span><span class="n">String</span> <span class="n">projectKey</span><span class="o">,</span> <span class="n">String</span> <span class="n">version</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">RemoteException</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">token</span> <span class="o">=</span> <span class="n">jiraSoapService</span><span class="o">.</span><span class="na">login</span><span class="o">(</span><span class="s">&quot;login&quot;</span><span class="o">,</span> <span class="s">&quot;password&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">query</span> <span class="o">=</span> <span class="n">MessageFormat</span><span class="o">.</span><span class="na">format</span><span class="o">(</span>
</span><span class='line'>        <span class="s">&quot;project=&#39;&#39;{0}&#39;&#39; AND FixVersion=&#39;&#39;{1}&#39;&#39; AND status!=&#39;&#39;Closed&#39;&#39;&quot;</span><span class="o">,</span>
</span><span class='line'>        <span class="n">project</span><span class="o">,</span> <span class="n">version</span><span class="o">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">jiraSoapService</span><span class="o">.</span><span class="na">getIssuesFromJqlSearch</span><span class="o">(</span><span class="n">token</span><span class="o">,</span> <span class="n">query</span><span class="o">,</span> <span class="mi">100</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Pour plus de détails, la documentation des services RPC de JIRA est là : <a href="http://confluence.atlassian.com/display/JIRA/JIRA+RPC+Services">http://confluence.atlassian.com/display/JIRA/JIRA+RPC+Services</a></p>

<h1>Créer des règles…</h1>

<p>Maintenant qu’on peut savoir s’il reste des issues ouvertes pour un projet/version donné, il faut faire en sorte que l’appel <code>mvn release:prepare</code> échoue quand c’est le cas. Pour cela on va utiliser le plugin <a href="http://maven.apache.org/plugins/maven-enforcer-plugin/">maven-enforcer-plugin</a>. Ce plugin permet de subordonner la compilation à la vérification d’un certain nombre de contraintes telles que la version de maven, la version du JDK, la présence de certains fichiers, etc.</p>

<p>Le plugin permet également d’ajouter ses propres règles. On peut donc en créer une se basant sur la classe <code>IssueChecker</code>.</p>

<p>D’abord on ajoute quelques dépendances au pom.xml :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;dependencies&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>!-- Enforcer dependencies --<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.apache.maven.enforcer<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>enforcer-api<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>${api.version}<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.apache.maven<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-project<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>${maven.version}<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.apache.maven<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-core<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>${maven.version}<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.apache.maven<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-artifact<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>${maven.version}<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.apache.maven<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-plugin-api<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>${maven.version}<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.codehaus.plexus<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>plexus-container-default<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>1.0-alpha-9<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/dependencies&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Puis il faut écrire une implémentation de l’interface <a href="http://maven.apache.org/enforcer/enforcer-api/apidocs/index.html">EnforcerRule</a> :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>url link-text </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">chelonix</span><span class="o">.</span><span class="na">maven</span><span class="o">.</span><span class="na">enforcer</span><span class="o">.</span><span class="na">rule</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">java.text.MessageFormat</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.atlassian.jira.rpc.exception.RemoteException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.atlassian.jira.rpc.soap.client.RemoteIssue</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.maven.enforcer.rule.api.EnforcerRule</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.maven.enforcer.rule.api.EnforcerRuleException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.apache.maven.enforcer.rule.api.EnforcerRuleHelper</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;/&lt;</span><span class="n">em</span><span class="o">&gt;*</span>
</span><span class='line'> <span class="o">*</span> <span class="n">Implementation</span> <span class="n">of</span> <span class="n">the</span> <span class="n">EnforcerRule</span> <span class="n">verifying</span> <span class="n">whether</span> <span class="n">there</span> <span class="n">is</span> <span class="n">any</span> <span class="n">remaining</span> <span class="n">unclosed</span> <span class="n">issues</span><span class="o">.</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;/</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JiraOpenIssuesRule</span> <span class="kd">implements</span> <span class="n">EnforcerRule</span>
</span><span class='line'><span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="kt">boolean</span> <span class="n">shouldIfail</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">(</span><span class="n">EnforcerRuleHelper</span> <span class="n">helper</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">EnforcerRuleException</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">MavenProject</span> <span class="n">project</span> <span class="o">=</span> <span class="o">(</span><span class="n">MavenProject</span><span class="o">)</span><span class="n">helper</span><span class="o">.</span><span class="na">evaluate</span><span class="o">(</span><span class="s">&quot;${project}&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">version</span> <span class="o">=</span> <span class="n">project</span><span class="o">.</span><span class="na">getVersion</span><span class="o">();</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">projectKey</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span><span class="n">helper</span><span class="o">.</span><span class="na">evaluate</span><span class="o">(</span><span class="s">&quot;${jira.project.key}&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">IssueChecker</span> <span class="n">checker</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IssueChecker</span><span class="o">();</span>
</span><span class='line'>        <span class="n">RemoteIssue</span><span class="o">[]</span> <span class="n">issues</span> <span class="o">=</span> <span class="n">checker</span><span class="o">.</span><span class="na">check</span><span class="o">(</span><span class="n">projectKey</span><span class="o">,</span> <span class="n">version</span><span class="o">);</span>
</span><span class='line'>        <span class="n">shouldIfail</span> <span class="o">=</span> <span class="n">issues</span><span class="o">.</span><span class="na">length</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ExpressionEvaluationException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">EnforcerRuleException</span><span class="o">(</span><span class="s">&quot;Unable to lookup an expression &quot;</span> <span class="o">+</span>
</span><span class='line'>            <span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">RemoteException</span> <span class="n">re</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">EnforcerRuleException</span><span class="o">(</span><span class="s">&quot;SOAP Remote exception &quot;</span> <span class="o">+</span>
</span><span class='line'>            <span class="n">re</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">re</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">shouldIfail</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">throw</span> <span class="k">new</span> <span class="nf">EnforcerRuleException</span><span class="o">(</span><span class="s">&quot;Remaining unclosed issues&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isCacheable</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isResultValid</span><span class="o">(</span><span class="n">EnforcerRule</span> <span class="n">er</span><span class="o">)</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="n">String</span> <span class="nf">getCacheId</span><span class="o">()</span>
</span><span class='line'><span class="o">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Pensez à ajouter une propriété <code>jira.project.key</code> indiquant la clé du projet JIRA dans le <code>pom.xml</code> du projet dont on fait la release.</p>

<h1>… Et les faire appliquer</h1>

<p>Finalement il n’y a plus qu’à appeler le plugin Enforcer lors de la release. Dans le <code>pom.xml</code> du projet à releaser on va ajouter le code suivant :</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;build&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>...
</span><span class='line'>    <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>org.apache.maven.plugins<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-release-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>2.0<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>preparationGoals<span class="ni">&amp;gt;</span>clean verify enforcer:enforce<span class="ni">&amp;lt;</span>/preparationGoals<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>arguments<span class="ni">&amp;gt;</span>-Prelease<span class="ni">&amp;lt;</span>/arguments<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>goals<span class="ni">&amp;gt;</span>deploy<span class="ni">&amp;lt;</span>/goals<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>autoVersionSubmodules<span class="ni">&amp;gt;</span>true<span class="ni">&amp;lt;</span>/autoVersionSubmodules<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>...
</span><span class='line'><span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;build&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;&lt;profile&gt;</span>
</span><span class='line'>  <span class="nt">&lt;id&gt;</span>releaseVerify<span class="nt">&lt;/id&gt;</span>
</span><span class='line'>  <span class="nt">&lt;build&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;pre&gt;&lt;code&gt;</span><span class="ni">&amp;lt;</span>plugins<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>plugin<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>maven-enforcer-plugin<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>dependencies<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>groupId<span class="ni">&amp;gt;</span>com.chelonix.maven.enforcer<span class="ni">&amp;lt;</span>/groupId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>artifactId<span class="ni">&amp;gt;</span>jira-rules<span class="ni">&amp;lt;</span>/artifactId<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>version<span class="ni">&amp;gt;</span>${jirarules.version}<span class="ni">&amp;lt;</span>/version<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/dependency<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/dependencies<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>rules<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>myCustomRule implementation=&quot;com.chelonix.maven.enforcer.rule.JiraOpenIssuesRule&quot;<span class="ni">&amp;gt;</span>
</span><span class='line'>          <span class="ni">&amp;lt;</span>shouldIfail<span class="ni">&amp;gt;</span>false<span class="ni">&amp;lt;</span>/shouldIfail<span class="ni">&amp;gt;</span>
</span><span class='line'>        <span class="ni">&amp;lt;</span>/myCustomRule<span class="ni">&amp;gt;</span>
</span><span class='line'>      <span class="ni">&amp;lt;</span>/rules<span class="ni">&amp;gt;</span>
</span><span class='line'>    <span class="ni">&amp;lt;</span>/configuration<span class="ni">&amp;gt;</span>
</span><span class='line'>  <span class="ni">&amp;lt;</span>/plugin<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="ni">&amp;lt;</span>/plugins<span class="ni">&amp;gt;</span>
</span><span class='line'><span class="nt">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>  <span class="nt">&lt;/build&gt;</span>
</span><span class='line'><span class="nt">&lt;/profile&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Quelques remarques : j’ai créé un profil <code>releaseVerify</code> afin de définir des règles utilisées uniquement lors de la release. Ensuite j’ai ajouté l’appel <code>enforcer:enforce</code> au paramètre de configuration <code>preparationGoals. Ce paramètre permet de définir une liste de _goals_ à exécuter lors de</code>release:prepare<code>. Par défaut ce sont les goals</code>clean verify<code>qui sont exécutés. Enfin j’ai ajouté le paramètre arguments avec la valeur</code>-PreleaseVerify` pour forcer l’usage du profil.</p>

<h1>Conclusion</h1>

<p>Désormais toute tentative de release avec des tickets encore ouverts dans le JIRA va échouer. Cela ne me dispense pas de faire la vérification mais me prémunit contre un éventuel oubli. Toutefois le code est encore loin d’être parfait (par exemple il y a un risque de NullPointerException quand <code>jira.project.key</code> n’est pas défini).</p>
]]></content>
  </entry>
  
</feed>
